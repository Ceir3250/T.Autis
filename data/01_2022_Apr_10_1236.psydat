ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
VC:\u005cUsers\u005cjeiso\u005cDesktop\u005cOpenSourceIRAP-master\u005cOpen Source IRAP.psyexp
p7
sS'dataFileName'
p8
VC:\u005cUsers\u005cjeiso\u005cDesktop\u005cOpenSourceIRAP-master\u005cdata\u005c01_2022_Apr_10_1236
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'IRAP'
p12
sS'dataNames'
p13
(lp14
sS'autoLog'
p15
I01
sS'extraInfo'
p16
(dp17
Vparticipant
p18
V01
p19
sVUseMonkey
p20
Vn
sVgender
p21
Vm
sVage
p22
V28
p23
sS'frameRate'
p24
cnumpy.core.multiarray
scalar
p25
(cnumpy
dtype
p26
(S'f8'
I0
I1
tRp27
(I3
S'<'
NNNI-1
I-1
I0
tbS'W:\x8d\xea\xd8\xc9M@'
tRp28
sS'expName'
p29
g12
sS'date'
p30
V2022_Apr_10_1236
p31
sVStartingBlock
p32
Va
ssS'loopsUnfinished'
p33
(lp34
g1
(cpsychopy.data
TrialHandler
p35
g3
NtRp36
(dp37
S'origin'
p38
V<?xml version="1.0" ?>\u000a<PsychoPy2experiment encoding="utf-8" version="1.85.2">\u000a  <Settings>\u000a    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>\u000a    <Param name="color" updates="None" val="black" valType="str"/>\u000a    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>\u000a    <Param name="Experiment info" updates="None" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code"/>\u000a    <Param name="JS libs" updates="None" val="packaged" valType="str"/>\u000a    <Param name="Units" updates="None" val="norm" valType="str"/>\u000a    <Param name="Save excel file" updates="None" val="False" valType="bool"/>\u000a    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>\u000a    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>\u000a    <Param name="Window size (pixels)" updates="None" val="[1600, 900]" valType="code"/>\u000a    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>\u000a    <Param name="blendMode" updates="None" val="avg" valType="str"/>\u000a    <Param name="Use version" updates="None" val="" valType="str"/>\u000a    <Param name="HTML path" updates="None" val="html" valType="str"/>\u000a    <Param name="Save csv file" updates="None" val="False" valType="bool"/>\u000a    <Param name="OSF Project ID" updates="None" val="" valType="str"/>\u000a    <Param name="Save log file" updates="None" val="True" valType="bool"/>\u000a    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>\u000a    <Param name="Show mouse" updates="None" val="False" valType="bool"/>\u000a    <Param name="Data filename" updates="None" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code"/>\u000a    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>\u000a    <Param name="expName" updates="None" val="IRAP" valType="str"/>\u000a    <Param name="logging level" updates="None" val="error" valType="code"/>\u000a    <Param name="Screen" updates="None" val="1" valType="num"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="practice_postblock_code_B" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# calculate summary stats&amp;#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &amp;#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&amp;#10;&amp;#10;# set messages&amp;#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &amp;#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&amp;#10;&amp;#10;### save summary stats to experiment handler so they're written to the csv file&amp;#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&amp;#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_aim_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$aim" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_accuracy_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_accuracy" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_latency_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_latency" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="press_box_prac_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$press_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.5]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="practice_postblock_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="practice_postblock_code_A" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# calculate summary stats&amp;#10;if(starting_block == 'a'):  &amp;#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &amp;#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&amp;#10;&amp;#10;if(starting_block == 'b'):  &amp;#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &amp;#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&amp;#10;&amp;#10;# set messages&amp;#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &amp;#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&amp;#10;&amp;#10;### save summary stats to experiment handler so they're written to the csv file&amp;#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&amp;#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_aim_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$aim" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_accuracy_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_accuracy" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_latency_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_latency" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="press_box_prac_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$press_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.5]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="practice_postblock_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="end_box" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$end_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="end_response" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'return'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val=".4" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="postblock_code_B" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# calculate summary stats&amp;#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &amp;#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&amp;#10;&amp;#10;# set messages&amp;#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &amp;#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&amp;#10;&amp;#10;### save summary stats to experiment handler so they're written to the csv file&amp;#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&amp;#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="aim_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$aim" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="accuracy_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_accuracy" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="latency_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_latency" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="press_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$press_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.5]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="postblock_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="postblock_code_A" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# calculate summary stats&amp;#10;if(starting_block == 'a'): &amp;#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &amp;#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&amp;#10;&amp;#10;if(starting_block == 'b'): &amp;#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &amp;#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&amp;#10;&amp;#10;# set messages&amp;#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &amp;#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&amp;#10;&amp;#10;### save summary stats to experiment handler so they're written to the csv file&amp;#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&amp;#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="aim_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$aim" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="accuracy_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_accuracy" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="latency_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_latency" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="press_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$press_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.5]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="postblock_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" updates="constant" val="#msg variable just needs some value at start&amp;#10;accuracyFeedback=''" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="trial_code_B" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# For each stimlulus, choose a random exemplar from the appropriate list&amp;#10;# word stimulus 1&amp;#10;if stimulus1_category == 'a':&amp;#10;    stimulus1 = stim1_catA_stimuli_many.pop()&amp;#10;elif stimulus1_category == 'b':&amp;#10;    stimulus1 = stim1_catB_stimuli_many.pop()&amp;#10;&amp;#10;# word stimulus 2&amp;#10;if stimulus2_category == 'c':&amp;#10;    stimulus2 = stim2_catA_stimuli_many.pop()&amp;#10;elif stimulus2_category == 'd':&amp;#10;    stimulus2 = stim2_catB_stimuli_many.pop()&amp;#10;&amp;#10;# image stimulus 1&amp;#10;if stimulus1_category == 'a':&amp;#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&amp;#10;elif stimulus1_category == 'b':&amp;#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&amp;#10;&amp;#10;# image stimulus 2&amp;#10;if stimulus2_category == 'c':&amp;#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&amp;#10;elif stimulus2_category == 'd':&amp;#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&amp;#10;&amp;#10;# set correct and incorrect responses&amp;#10;if moving_response_options == False:&amp;#10;    response_option_left = response_option_B  # i.e., the focal trial type is the right hand one, for hand dominance&amp;#10;    response_option_right = response_option_A&amp;#10;    response_option_onset = 0  # response options are onscreen constantly&amp;#10;    if (trialType == 1) or (trialType == 4):&amp;#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&amp;#10;        required_correct = 'e'&amp;#10;        feedback_allowed = 'i'&amp;#10;        feedback_correct = 'i'&amp;#10;    elif (trialType == 2) or (trialType == 3):&amp;#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&amp;#10;        required_correct = 'i'&amp;#10;        feedback_allowed = 'e'&amp;#10;        feedback_correct = 'e'&amp;#10;elif moving_response_options == True:&amp;#10;    rand_positions = randint(1, 3)&amp;#10;    response_option_onset = 0.4  # response options appear with stimuli&amp;#10;    if rand_positions == 1:&amp;#10;        response_option_left = response_option_B&amp;#10;        response_option_right = response_option_A&amp;#10;        if (trialType == 1) or (trialType == 4):&amp;#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&amp;#10;            required_correct = 'e'&amp;#10;            feedback_allowed = 'i'&amp;#10;            feedback_correct = 'i'&amp;#10;        elif (trialType == 2) or (trialType == 3):&amp;#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&amp;#10;            required_correct = 'i'&amp;#10;            feedback_allowed = 'e'&amp;#10;            feedback_correct = 'e'&amp;#10;    elif rand_positions == 2:&amp;#10;        response_option_left = response_option_A&amp;#10;        response_option_right = response_option_B&amp;#10;        if (trialType == 1) or (trialType == 4):&amp;#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&amp;#10;            required_correct = 'i'&amp;#10;            feedback_allowed = 'e'&amp;#10;            feedback_correct = 'e'&amp;#10;        elif (trialType == 2) or (trialType == 3):&amp;#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&amp;#10;            required_correct = 'e'&amp;#10;            feedback_allowed = 'i'&amp;#10;            feedback_correct = 'i'" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="# save exemplars to experiment handler so they're written to the csv file&amp;#10;thisExp.addData('stimulus1', stimulus1)&amp;#10;thisExp.addData('stimulus2', stimulus2)&amp;#10;thisExp.addData('img_stimulus1', img_stimulus1)&amp;#10;thisExp.addData('img_stimulus2', img_stimulus2)&amp;#10;thisExp.addData('response_option_left', response_option_left)&amp;#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="# Accuracy feedback message&amp;#10;if len(feedback_response_B.keys)&lt;1:&amp;#10;    accuracyFeedback=&quot;&quot;&amp;#10;else:&amp;#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="flipVert" updates="constant" val="False" valType="bool"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="image_stimulus1_box_B" valType="code"/>\u000a        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="mask" updates="constant" val="None" valType="str"/>\u000a        <Param name="pos" updates="set every repeat" val="image_stimulus1_location" valType="code"/>\u000a        <Param name="interpolate" updates="constant" val="linear" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="texture resolution" updates="constant" val="128" valType="code"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="image" updates="set every repeat" val="$img_stimulus1" valType="str"/>\u000a        <Param name="size" updates="constant" val="[0.5, 0.5]" valType="code"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="flipVert" updates="constant" val="False" valType="bool"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="image_stimulus2_box_B" valType="code"/>\u000a        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="mask" updates="constant" val="None" valType="str"/>\u000a        <Param name="pos" updates="set every repeat" val="image_stimulus2_location" valType="code"/>\u000a        <Param name="interpolate" updates="constant" val="linear" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="texture resolution" updates="constant" val="128" valType="code"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="image" updates="set every repeat" val="$img_stimulus2" valType="str"/>\u000a        <Param name="size" updates="constant" val="[0.5, 0.5]" valType="code"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="stimulus1_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$stimulus1" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="stimulus1_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="stimulus2_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$stimulus2" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="stimulus2_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" updates="constant" val="$required_correct" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>\u000a        <Param name="name" updates="None" val="required_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="set every repeat" val="required_allowed" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="store" updates="constant" val="first key" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" updates="constant" val="$feedback_correct" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>\u000a        <Param name="name" updates="None" val="feedback_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="set every repeat" val="feedback_allowed" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="store" updates="constant" val="first key" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="left_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$response_option_left" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="response_option_left_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="0" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="$response_option_onset" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="right_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$response_option_right" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="response_option_right_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="0" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="$response_option_onset" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="accuracy_feedback_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="red" valType="str"/>\u000a        <Param name="text" updates="set every frame" val="$accuracyFeedback" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="accuracy_feedback_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.2" valType="code"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="trial_code_A" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# For each stimlulus, choose a random exemplar from the appropriate list&amp;#10;# word stimulus 1&amp;#10;if stimulus1_category == 'a':&amp;#10;    stimulus1 = stim1_catA_stimuli_many.pop()&amp;#10;elif stimulus1_category == 'b':&amp;#10;    stimulus1 = stim1_catB_stimuli_many.pop()&amp;#10;&amp;#10;# word stimulus 2&amp;#10;if stimulus2_category == 'c':&amp;#10;    stimulus2 = stim2_catA_stimuli_many.pop()&amp;#10;elif stimulus2_category == 'd':&amp;#10;    stimulus2 = stim2_catB_stimuli_many.pop()&amp;#10;&amp;#10;# image stimulus 1&amp;#10;if stimulus1_category == 'a':&amp;#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&amp;#10;elif stimulus1_category == 'b':&amp;#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&amp;#10;&amp;#10;# image stimulus 2&amp;#10;if stimulus2_category == 'c':&amp;#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&amp;#10;elif stimulus2_category == 'd':&amp;#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&amp;#10;&amp;#10;# set correct and incorrect responses&amp;#10;if moving_response_options == False:&amp;#10;    response_option_left = response_option_B  # i.e., the focal trial type is the right hand one, for hand dominance&amp;#10;    response_option_right = response_option_A&amp;#10;    response_option_onset = 0  # response options are onscreen constantly&amp;#10;    if (trialType == 1) or (trialType == 4):&amp;#10;        required_allowed = 'i'&amp;#10;        required_correct = 'i'&amp;#10;        feedback_allowed = 'e'&amp;#10;        feedback_correct = 'e'&amp;#10;    elif (trialType == 2) or (trialType == 3):&amp;#10;        required_allowed = 'e'&amp;#10;        required_correct = 'e'&amp;#10;        feedback_allowed = 'i'&amp;#10;        feedback_correct = 'i'&amp;#10;elif moving_response_options == True:&amp;#10;    rand_positions = randint(1, 3)&amp;#10;    response_option_onset = 0.4  # response options appear with stimuli&amp;#10;    if rand_positions == 1:&amp;#10;        response_option_left = response_option_B&amp;#10;        response_option_right = response_option_A&amp;#10;        if (trialType == 1) or (trialType == 4):&amp;#10;            required_allowed = 'i'&amp;#10;            required_correct = 'i'&amp;#10;            feedback_allowed = 'e'&amp;#10;            feedback_correct = 'e'&amp;#10;        elif (trialType == 2) or (trialType == 3):&amp;#10;            required_allowed = 'e'&amp;#10;            required_correct = 'e'&amp;#10;            feedback_allowed = 'i'&amp;#10;            feedback_correct = 'i'&amp;#10;    elif rand_positions == 2:&amp;#10;        response_option_left = response_option_A&amp;#10;        response_option_right = response_option_B&amp;#10;        if (trialType == 1) or (trialType == 4):&amp;#10;            required_allowed = 'e'&amp;#10;            required_correct = 'e'&amp;#10;            feedback_allowed = 'i'&amp;#10;            feedback_correct = 'i'&amp;#10;        elif (trialType == 2) or (trialType == 3):&amp;#10;            required_allowed = 'i'&amp;#10;            required_correct = 'i'&amp;#10;            feedback_allowed = 'e'&amp;#10;            feedback_correct = 'e'" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="# save exemplars to experiment handler so they're written to the csv file&amp;#10;thisExp.addData('stimulus1', stimulus1)&amp;#10;thisExp.addData('stimulus2', stimulus2)&amp;#10;thisExp.addData('img_stimulus1', img_stimulus1)&amp;#10;thisExp.addData('img_stimulus2', img_stimulus2)&amp;#10;thisExp.addData('response_option_left', response_option_left)&amp;#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="# Accuracy feedback message&amp;#10;if len(feedback_response_A.keys)&lt;1:&amp;#10;    accuracyFeedback=&quot;&quot;&amp;#10;else:&amp;#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="flipVert" updates="constant" val="False" valType="bool"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="image_stimulus1_box_A" valType="code"/>\u000a        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="mask" updates="constant" val="None" valType="str"/>\u000a        <Param name="pos" updates="set every repeat" val="image_stimulus1_location" valType="code"/>\u000a        <Param name="interpolate" updates="constant" val="linear" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="texture resolution" updates="constant" val="128" valType="code"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="image" updates="set every repeat" val="$img_stimulus1" valType="str"/>\u000a        <Param name="size" updates="constant" val="[0.5, 0.5]" valType="code"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="flipVert" updates="constant" val="False" valType="bool"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="image_stimulus2_box_A" valType="code"/>\u000a        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="mask" updates="constant" val="None" valType="str"/>\u000a        <Param name="pos" updates="set every repeat" val="image_stimulus2_location" valType="code"/>\u000a        <Param name="interpolate" updates="constant" val="linear" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="texture resolution" updates="constant" val="128" valType="code"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="image" updates="set every repeat" val="$img_stimulus2" valType="str"/>\u000a        <Param name="size" updates="constant" val="[0.5, 0.5]" valType="code"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="stimulus1_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$stimulus1" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="stimulus1_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="stimulus2_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$stimulus2" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="stimulus2_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" updates="constant" val="$required_correct" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>\u000a        <Param name="name" updates="None" val="required_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="set every repeat" val="required_allowed" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="store" updates="constant" val="first key" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" updates="constant" val="$feedback_correct" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>\u000a        <Param name="name" updates="None" val="feedback_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="set every repeat" val="feedback_allowed" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="store" updates="constant" val="first key" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="left_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$response_option_left" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="response_option_left_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="0" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="$response_option_onset" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="right_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$response_option_right" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="response_option_right_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="0" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="$response_option_onset" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="accuracy_feedback_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="red" valType="str"/>\u000a        <Param name="text" updates="set every frame" val="$accuracyFeedback" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="accuracy_feedback_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.2" valType="code"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" updates="constant" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&amp;#10;complete_test_blocks = 0" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="end_practice_code" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Assess if acc and latency mastery criteria were met&amp;#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&amp;#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx&amp;#10;    practice_blocks.finished = True" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" updates="constant" val="# msg variable just needs some value at start&amp;#10;accuracyFeedback=''&amp;#10;" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="preblock_A_code" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# Generate list of stimuli for the block&amp;#10;stim1_catA_stimuli_many = generate_trials('labelA_stimuli', 2, True)  # function and variable determined at begin exp.&amp;#10;stim1_catB_stimuli_many = generate_trials('labelB_stimuli', 2, True)&amp;#10;stim2_catA_stimuli_many = generate_trials('targetA_stimuli', 2, True)&amp;#10;stim2_catB_stimuli_many = generate_trials('targetB_stimuli', 2, True)&amp;#10;img_stim1_catA_stimuli_many = generate_trials('labelA_image_stimuli', 2, True)&amp;#10;img_stim1_catB_stimuli_many = generate_trials('labelB_image_stimuli', 2, True)&amp;#10;img_stim2_catA_stimuli_many = generate_trials('targetA_image_stimuli', 2, True)&amp;#10;img_stim2_catB_stimuli_many = generate_trials('targetB_image_stimuli', 2, True)&amp;#10;" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="constant" val="rule_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>\u000a        <Param name="color" updates="constant" val="orange" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$rule_A" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" updates="constant" val="thisTrial.corrAns" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="preblock_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="preblock_B_code" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# Generate list of stimuli for the block&amp;#10;stim1_catA_stimuli_many = generate_trials('labelA_stimuli', 2, True)  # function and variable determined at begin exp.&amp;#10;stim1_catB_stimuli_many = generate_trials('labelB_stimuli', 2, True)&amp;#10;stim2_catA_stimuli_many = generate_trials('targetA_stimuli', 2, True)&amp;#10;stim2_catB_stimuli_many = generate_trials('targetB_stimuli', 2, True)&amp;#10;img_stim1_catA_stimuli_many = generate_trials('labelA_image_stimuli', 2, True)&amp;#10;img_stim1_catB_stimuli_many = generate_trials('labelB_image_stimuli', 2, True)&amp;#10;img_stim2_catA_stimuli_many = generate_trials('targetA_image_stimuli', 2, True)&amp;#10;img_stim2_catB_stimuli_many = generate_trials('targetB_image_stimuli', 2, True)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="constant" val="rule_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>\u000a        <Param name="color" updates="constant" val="cyan" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$rule_B" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" updates="constant" val="thisTrial.corrAns" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="preblock_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" updates="constant" val="# Dependencies&amp;#10;&amp;#10;from psychopy.hardware.emulator import ResponseEmulator  #for response emulator&amp;#10;import itertools  # for flattening lists of lists into lists&amp;#10;import random  # for shuffling lists&amp;#10;&amp;#10;# Functions&amp;#10;&amp;#10;# Convert string to boolean.&amp;#10;# Take any likely input from the task.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&amp;#10;def string_to_booleanl(v):&amp;#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, 1)&amp;#10;&amp;#10;# Trial generation function&amp;#10;def generate_trials(trial_type_column, multiplier, shuffle_list):&amp;#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &amp;#10;    a = dict()  # declare a dict to be populated&amp;#10;    for i in range(len(exemplars)):&amp;#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&amp;#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&amp;#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&amp;#10;    if shuffle_list == True:&amp;#10;        random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&amp;#10;    return a&amp;#10;&amp;#10;&amp;#10;# Determine variables based on dialogue box&amp;#10;&amp;#10;# auto response monkey&amp;#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&amp;#10;    Monkey = True&amp;#10;else:&amp;#10;    Monkey = False&amp;#10;&amp;#10;# starting block&amp;#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&amp;#10;    starting_block = 'a'&amp;#10;    Afirst_nReps = 1&amp;#10;    Asecond_nReps = 0&amp;#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&amp;#10;    starting_block = 'b'&amp;#10;    Afirst_nReps = 0&amp;#10;    Asecond_nReps = 1&amp;#10;" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="inst_code" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# ResponseEmulator&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# Create sufficiently long lists of stimuli&amp;#10;&quot;&quot;&quot;&amp;#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &amp;#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &amp;#10;as well as the categories. &amp;#10;&amp;#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &amp;#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &amp;#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &amp;#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&amp;#10;rows, and then populates the dict vertically from the rows. &amp;#10;&quot;&quot;&quot;&amp;#10;# Import stimuli exemplars&amp;#10;exemplars = data.importConditions(stimulus_file)  # Import stimuli exemplars. stimulus_file is defined in task.xlsx&amp;#10;&amp;#10;# Determine nReps of trials loop based on number of exemplars&amp;#10;reptitions = len(exemplars)&amp;#10;&amp;#10;&amp;#10;# Generate a first, unshuffled list of the stimuli exemplars for saving to output file&amp;#10;&amp;#10;# 1. generate: no shuffling, multiplier = 1.&amp;#10;labelA_stimuli_for_output = generate_trials('labelA_stimuli', 1, False)  # function and variable determined at begin exp.&amp;#10;labelB_stimuli_for_output = generate_trials('labelB_stimuli', 1, False)&amp;#10;targetA_stimuli_for_output = generate_trials('targetA_stimuli', 1, False)&amp;#10;targetB_stimuli_for_output = generate_trials('targetB_stimuli', 1, False)&amp;#10;labelA_image_stimuli_for_output = generate_trials('labelA_image_stimuli', 1, False)&amp;#10;labelB_image_stimuli_for_output = generate_trials('labelB_image_stimuli', 1, False)&amp;#10;targetA_image_stimuli_for_output = generate_trials('targetA_image_stimuli', 1, False)&amp;#10;targetB_image_stimuli_for_output = generate_trials('targetB_image_stimuli', 1, False)&amp;#10;&amp;#10;# 2. save these lists to the trial handler to be written to csv&amp;#10;thisExp.addData('labelA_stimuli_for_output', labelA_stimuli_for_output)&amp;#10;thisExp.addData('labelB_stimuli_for_output', labelB_stimuli_for_output)&amp;#10;thisExp.addData('targetA_stimuli_for_output', targetA_stimuli_for_output)&amp;#10;thisExp.addData('targetB_stimuli_for_output', targetB_stimuli_for_output)&amp;#10;thisExp.addData('labelA_image_stimuli_for_output', labelA_image_stimuli_for_output)&amp;#10;thisExp.addData('labelB_image_stimuli_for_output', labelB_image_stimuli_for_output)&amp;#10;thisExp.addData('targetA_image_stimuli_for_output', targetA_image_stimuli_for_output)&amp;#10;thisExp.addData('targetB_image_stimuli_for_output', targetB_image_stimuli_for_output)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="intro_box" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$intro_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="intro_resp" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" updates="None" val="task.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="task" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="1" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'response_option_left_location': [-0.3, -0.6], u'accuracyCriterion': 0, u'response_option_right_location': [0.3, -0.6], u'end_message': u'End of task', u'image_stimulus1_location': [0, 0.3], u'speed': u'Speed:', u'rule_A': u&quot;Respond AS IF: \u005cn    flowers are positive\u005cn    insects are negative\u005cn\u005cnGo as quickly as you can while being accurate\u005cn\u005cnPress 'e' or 'i' to continue&quot;, u'rule_B': u&quot;Respond AS IF: \u005cn    insects are positive \u005cn    flowers are negative\u005cn\u005cnGo as quickly as you can while being accurate\u005cn\u005cnPress 'e' or 'i' to continue&quot;, u'press_message': u&quot;Press 'e' or 'i' to continue&quot;, u'intro_message': u&quot;This task will present you with pairs of words. \u005cn\u005cnYou will be given rules on how to respond to them. \u005cn\u005cnGo as quickly as you can while being accurate.\u005cn\u005cnPlace your fingers on the 'e' and 'i' keys. \u005cn\u005cnPress either one to continue.&quot;, u'response_option_B': u'Different', u'response_option_A': u'Similar', u'latencyCriterion': 2, u'stimulus2_location': [0, -0.2], u'accuracy': u'Accuracy:', u'seconds': u'seconds', u'percentCorrect': u'percent correct', u'stimulus_file': u'flower_insects_stimuli.xlsx', u'accuracy_feedback_location': [0, -0.7], u'moving_response_options': u'False', u'image_stimulus2_location': [0, -0.3], u'IRAP_name': u'flowers-insects demo IRAP', u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'stimulus1_location': [0, 0.2], u'n_pairs_test_blocks': 1, u'max_pairs_practice_blocks': 4}, {u'response_option_left_location': [-0.3, -0.6], u'accuracyCriterion': 0, u'response_option_right_location': [0.3, -0.6], u'end_message': u'End of task', u'image_stimulus1_location': [0, 0.3], u'speed': u'Speed:', u'rule_A': u&quot;Respond AS IF: \u005cn    I am positive\u005cn    Others are negative\u005cn\u005cnGo as quickly as you can while being accurate\u005cn\u005cnPress 'e' or 'i' to continue&quot;, u'rule_B': u&quot;Respond AS IF: \u005cn    I am negative \u005cn    Others are positive\u005cn\u005cnGo as quickly as you can while being accurate\u005cn\u005cnPress 'e' or 'i' to continue&quot;, u'press_message': u&quot;Press 'e' or 'i' to continue&quot;, u'intro_message': u&quot;This task will present you with pairs of words. \u005cn\u005cnYou will be given rules on how to respond to them. \u005cn\u005cnGo as quickly as you can while being accurate.\u005cn\u005cnPlace your fingers on the 'e' and 'i' keys. \u005cn\u005cnPress either one to continue.&quot;, u'response_option_B': u'Different', u'response_option_A': u'Similar', u'latencyCriterion': 2, u'stimulus2_location': [0, -0.2], u'accuracy': u'Accuracy:', u'seconds': u'seconds', u'percentCorrect': u'percent correct', u'stimulus_file': u'self_others_stimuli.xlsx', u'accuracy_feedback_location': [0, -0.7], u'moving_response_options': u'False', u'image_stimulus2_location': [0, -0.3], u'IRAP_name': u'flowers-insects demo IRAP', u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'stimulus1_location': [0, 0.2], u'n_pairs_test_blocks': 1, u'max_pairs_practice_blocks': 4}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_blocks" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="max_pairs_practice_blocks" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_Afirst" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="Afirst_nReps" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_trials_Afirst" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_trials_B" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_Asecond" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="Asecond_nReps" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_trials_Asecond" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="test_blocks" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="complete_test_blocks" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="Afirst" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="Afirst_nReps" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="trials_Afirst" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="trials_B" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="Asecond" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="Asecond_nReps" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="trials_Asecond" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p39
sS'thisTrial'
p40
g1
(cpsychopy.data
TrialType
p41
c__builtin__
dict
p42
(dp43
Vresponse_option_left_location
p44
(lp45
F-0.29999999999999999
aF-0.59999999999999998
asVaccuracyCriterion
p46
F0.80000000000000004
sVresponse_option_right_location
p47
(lp48
F0.29999999999999999
aF-0.59999999999999998
asVseconds
p49
g49
sVpercentCorrect
p50
Vpercent correct
p51
sVend_message
p52
VEnd of task
p53
sVimage_stimulus1_location
p54
(lp55
I0
aF0.29999999999999999
asVrule_A
p56
VRespond AS IF: \u000a    flowers are positive\u000a    insects are negative\u000a\u000aGo as quickly as you can while being accurate\u000a\u000aPress 'e' or 'i' to continue
p57
sVspeed
p58
VSpeed:
p59
sVaccuracy_feedback_location
p60
(lp61
I0
aF-0.69999999999999996
asVmoving_response_options
p62
I0
sVstimulus_file
p63
Vstimuli.xlsx
p64
sVimage_stimulus2_location
p65
(lp66
I0
aF-0.29999999999999999
asVrule_B
p67
VRespond AS IF: \u000a    insects are positive \u000a    flowers are negative\u000a\u000aGo as quickly as you can while being accurate\u000a\u000aPress 'e' or 'i' to continue
p68
sVpress_message
p69
VPress 'e' or 'i' to continue
p70
sVintro_message
p71
VThis task will present you with pairs of words. \u000a\u000aYou will be given rules on how to respond to them. \u000a\u000aGo as quickly as you can while being accurate.\u000a\u000aPlace your fingers on the 'e' and 'i' keys. \u000a\u000aPress either one to continue.
p72
sVaim
p73
VAim for >80% and <2 seconds
p74
sVresponse_option_B
p75
VDifferent
p76
sVresponse_option_A
p77
VSimilar
p78
sVstimulus1_location
p79
(lp80
I0
aF0.20000000000000001
asVstimulus2_location
p81
(lp82
I0
aF-0.20000000000000001
asVn_pairs_test_blocks
p83
I3
sVmax_pairs_practice_blocks
p84
I4
sVlatencyCriterion
p85
I2
sVaccuracy
p86
VAccuracy:
p87
stRp88
sS'_exp'
p89
I284460304
sg11
S'task'
p90
sg6
g7
sS'thisRepN'
p91
I0
sg15
I01
sg16
g17
sS'data'
p92
g1
(cpsychopy.data
DataHandler
p93
g42
(dp94
S'ran'
p95
cnumpy.ma.core
_mareconstruct
p96
(cnumpy.ma.core
MaskedArray
p97
cnumpy
ndarray
p98
(I0
tp99
S'b'
tRp100
(I1
(I1
I1
tg26
(S'f4'
I0
I1
tRp101
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?'
S'\x00'
NtbsS'order'
p102
g96
(g97
g98
g99
S'b'
tRp103
(I1
(I1
I1
tg101
I00
S'\x00\x00\x00\x00'
S'\x00'
NtbstRp104
(dp105
S'isNumeric'
p106
(dp107
g95
I01
sg102
I01
ssS'trials'
p108
g36
sS'dataTypes'
p109
(lp110
g95
ag102
asS'dataShape'
p111
(lp112
I1
aI1
asbsS'method'
p113
S'sequential'
p114
sS'sequenceIndices'
p115
cnumpy.core.multiarray
_reconstruct
p116
(g98
(I0
tS'b'
tRp117
(I1
(I1
I1
tg26
(S'i4'
I0
I1
tRp118
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00'
tbsS'finished'
p119
I00
sS'nReps'
p120
I1
sS'nRemaining'
p121
I0
sS'trialList'
p122
(lp123
g88
asS'seed'
p124
NsS'thisIndex'
p125
g25
(g118
S'\x00\x00\x00\x00'
tRp126
sS'thisN'
p127
I0
sS'thisTrialN'
p128
I0
sS'nTotal'
p129
I1
sS'_warnUseOfNext'
p130
I01
sbag1
(g35
g3
NtRp131
(dp132
g38
V<?xml version="1.0" ?>\u000a<PsychoPy2experiment encoding="utf-8" version="1.85.2">\u000a  <Settings>\u000a    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>\u000a    <Param name="color" updates="None" val="black" valType="str"/>\u000a    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>\u000a    <Param name="Experiment info" updates="None" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code"/>\u000a    <Param name="JS libs" updates="None" val="packaged" valType="str"/>\u000a    <Param name="Units" updates="None" val="norm" valType="str"/>\u000a    <Param name="Save excel file" updates="None" val="False" valType="bool"/>\u000a    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>\u000a    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>\u000a    <Param name="Window size (pixels)" updates="None" val="[1600, 900]" valType="code"/>\u000a    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>\u000a    <Param name="blendMode" updates="None" val="avg" valType="str"/>\u000a    <Param name="Use version" updates="None" val="" valType="str"/>\u000a    <Param name="HTML path" updates="None" val="html" valType="str"/>\u000a    <Param name="Save csv file" updates="None" val="False" valType="bool"/>\u000a    <Param name="OSF Project ID" updates="None" val="" valType="str"/>\u000a    <Param name="Save log file" updates="None" val="True" valType="bool"/>\u000a    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>\u000a    <Param name="Show mouse" updates="None" val="False" valType="bool"/>\u000a    <Param name="Data filename" updates="None" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code"/>\u000a    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>\u000a    <Param name="expName" updates="None" val="IRAP" valType="str"/>\u000a    <Param name="logging level" updates="None" val="error" valType="code"/>\u000a    <Param name="Screen" updates="None" val="1" valType="num"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="practice_postblock_code_B" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# calculate summary stats&amp;#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &amp;#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&amp;#10;&amp;#10;# set messages&amp;#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &amp;#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&amp;#10;&amp;#10;### save summary stats to experiment handler so they're written to the csv file&amp;#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&amp;#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_aim_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$aim" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_accuracy_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_accuracy" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_latency_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_latency" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="press_box_prac_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$press_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.5]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="practice_postblock_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="practice_postblock_code_A" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# calculate summary stats&amp;#10;if(starting_block == 'a'):  &amp;#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &amp;#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&amp;#10;&amp;#10;if(starting_block == 'b'):  &amp;#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &amp;#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&amp;#10;&amp;#10;# set messages&amp;#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &amp;#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&amp;#10;&amp;#10;### save summary stats to experiment handler so they're written to the csv file&amp;#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&amp;#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_aim_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$aim" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_accuracy_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_accuracy" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="practice_latency_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_latency" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="press_box_prac_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$press_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.5]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="practice_postblock_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="end_box" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$end_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="end_response" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'return'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val=".4" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="postblock_code_B" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# calculate summary stats&amp;#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &amp;#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&amp;#10;&amp;#10;# set messages&amp;#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &amp;#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&amp;#10;&amp;#10;### save summary stats to experiment handler so they're written to the csv file&amp;#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&amp;#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="aim_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$aim" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="accuracy_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_accuracy" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="latency_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_latency" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="press_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$press_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.5]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="postblock_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="postblock_code_A" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# calculate summary stats&amp;#10;if(starting_block == 'a'): &amp;#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &amp;#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&amp;#10;&amp;#10;if(starting_block == 'b'): &amp;#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &amp;#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&amp;#10;&amp;#10;# set messages&amp;#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &amp;#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&amp;#10;&amp;#10;### save summary stats to experiment handler so they're written to the csv file&amp;#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&amp;#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="aim_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$aim" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="accuracy_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_accuracy" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="latency_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$msg_latency" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.2]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="press_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$press_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, -0.5]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="postblock_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" updates="constant" val="#msg variable just needs some value at start&amp;#10;accuracyFeedback=''" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="trial_code_B" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# For each stimlulus, choose a random exemplar from the appropriate list&amp;#10;# word stimulus 1&amp;#10;if stimulus1_category == 'a':&amp;#10;    stimulus1 = stim1_catA_stimuli_many.pop()&amp;#10;elif stimulus1_category == 'b':&amp;#10;    stimulus1 = stim1_catB_stimuli_many.pop()&amp;#10;&amp;#10;# word stimulus 2&amp;#10;if stimulus2_category == 'c':&amp;#10;    stimulus2 = stim2_catA_stimuli_many.pop()&amp;#10;elif stimulus2_category == 'd':&amp;#10;    stimulus2 = stim2_catB_stimuli_many.pop()&amp;#10;&amp;#10;# image stimulus 1&amp;#10;if stimulus1_category == 'a':&amp;#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&amp;#10;elif stimulus1_category == 'b':&amp;#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&amp;#10;&amp;#10;# image stimulus 2&amp;#10;if stimulus2_category == 'c':&amp;#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&amp;#10;elif stimulus2_category == 'd':&amp;#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&amp;#10;&amp;#10;# set correct and incorrect responses&amp;#10;if moving_response_options == False:&amp;#10;    response_option_left = response_option_B  # i.e., the focal trial type is the right hand one, for hand dominance&amp;#10;    response_option_right = response_option_A&amp;#10;    response_option_onset = 0  # response options are onscreen constantly&amp;#10;    if (trialType == 1) or (trialType == 4):&amp;#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&amp;#10;        required_correct = 'e'&amp;#10;        feedback_allowed = 'i'&amp;#10;        feedback_correct = 'i'&amp;#10;    elif (trialType == 2) or (trialType == 3):&amp;#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&amp;#10;        required_correct = 'i'&amp;#10;        feedback_allowed = 'e'&amp;#10;        feedback_correct = 'e'&amp;#10;elif moving_response_options == True:&amp;#10;    rand_positions = randint(1, 3)&amp;#10;    response_option_onset = 0.4  # response options appear with stimuli&amp;#10;    if rand_positions == 1:&amp;#10;        response_option_left = response_option_B&amp;#10;        response_option_right = response_option_A&amp;#10;        if (trialType == 1) or (trialType == 4):&amp;#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&amp;#10;            required_correct = 'e'&amp;#10;            feedback_allowed = 'i'&amp;#10;            feedback_correct = 'i'&amp;#10;        elif (trialType == 2) or (trialType == 3):&amp;#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&amp;#10;            required_correct = 'i'&amp;#10;            feedback_allowed = 'e'&amp;#10;            feedback_correct = 'e'&amp;#10;    elif rand_positions == 2:&amp;#10;        response_option_left = response_option_A&amp;#10;        response_option_right = response_option_B&amp;#10;        if (trialType == 1) or (trialType == 4):&amp;#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&amp;#10;            required_correct = 'i'&amp;#10;            feedback_allowed = 'e'&amp;#10;            feedback_correct = 'e'&amp;#10;        elif (trialType == 2) or (trialType == 3):&amp;#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&amp;#10;            required_correct = 'e'&amp;#10;            feedback_allowed = 'i'&amp;#10;            feedback_correct = 'i'" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="# save exemplars to experiment handler so they're written to the csv file&amp;#10;thisExp.addData('stimulus1', stimulus1)&amp;#10;thisExp.addData('stimulus2', stimulus2)&amp;#10;thisExp.addData('img_stimulus1', img_stimulus1)&amp;#10;thisExp.addData('img_stimulus2', img_stimulus2)&amp;#10;thisExp.addData('response_option_left', response_option_left)&amp;#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="# Accuracy feedback message&amp;#10;if len(feedback_response_B.keys)&lt;1:&amp;#10;    accuracyFeedback=&quot;&quot;&amp;#10;else:&amp;#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="flipVert" updates="constant" val="False" valType="bool"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="image_stimulus1_box_B" valType="code"/>\u000a        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="mask" updates="constant" val="None" valType="str"/>\u000a        <Param name="pos" updates="set every repeat" val="image_stimulus1_location" valType="code"/>\u000a        <Param name="interpolate" updates="constant" val="linear" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="texture resolution" updates="constant" val="128" valType="code"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="image" updates="set every repeat" val="$img_stimulus1" valType="str"/>\u000a        <Param name="size" updates="constant" val="[0.5, 0.5]" valType="code"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="flipVert" updates="constant" val="False" valType="bool"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="image_stimulus2_box_B" valType="code"/>\u000a        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="mask" updates="constant" val="None" valType="str"/>\u000a        <Param name="pos" updates="set every repeat" val="image_stimulus2_location" valType="code"/>\u000a        <Param name="interpolate" updates="constant" val="linear" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="texture resolution" updates="constant" val="128" valType="code"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="image" updates="set every repeat" val="$img_stimulus2" valType="str"/>\u000a        <Param name="size" updates="constant" val="[0.5, 0.5]" valType="code"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="stimulus1_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$stimulus1" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="stimulus1_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="stimulus2_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$stimulus2" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="stimulus2_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" updates="constant" val="$required_correct" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>\u000a        <Param name="name" updates="None" val="required_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="set every repeat" val="required_allowed" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="store" updates="constant" val="first key" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" updates="constant" val="$feedback_correct" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>\u000a        <Param name="name" updates="None" val="feedback_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="set every repeat" val="feedback_allowed" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="store" updates="constant" val="first key" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="left_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$response_option_left" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="response_option_left_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="0" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="$response_option_onset" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="right_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$response_option_right" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="response_option_right_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="0" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="$response_option_onset" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="accuracy_feedback_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="red" valType="str"/>\u000a        <Param name="text" updates="set every frame" val="$accuracyFeedback" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="accuracy_feedback_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.2" valType="code"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="trial_code_A" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# For each stimlulus, choose a random exemplar from the appropriate list&amp;#10;# word stimulus 1&amp;#10;if stimulus1_category == 'a':&amp;#10;    stimulus1 = stim1_catA_stimuli_many.pop()&amp;#10;elif stimulus1_category == 'b':&amp;#10;    stimulus1 = stim1_catB_stimuli_many.pop()&amp;#10;&amp;#10;# word stimulus 2&amp;#10;if stimulus2_category == 'c':&amp;#10;    stimulus2 = stim2_catA_stimuli_many.pop()&amp;#10;elif stimulus2_category == 'd':&amp;#10;    stimulus2 = stim2_catB_stimuli_many.pop()&amp;#10;&amp;#10;# image stimulus 1&amp;#10;if stimulus1_category == 'a':&amp;#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&amp;#10;elif stimulus1_category == 'b':&amp;#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&amp;#10;&amp;#10;# image stimulus 2&amp;#10;if stimulus2_category == 'c':&amp;#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&amp;#10;elif stimulus2_category == 'd':&amp;#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&amp;#10;&amp;#10;# set correct and incorrect responses&amp;#10;if moving_response_options == False:&amp;#10;    response_option_left = response_option_B  # i.e., the focal trial type is the right hand one, for hand dominance&amp;#10;    response_option_right = response_option_A&amp;#10;    response_option_onset = 0  # response options are onscreen constantly&amp;#10;    if (trialType == 1) or (trialType == 4):&amp;#10;        required_allowed = 'i'&amp;#10;        required_correct = 'i'&amp;#10;        feedback_allowed = 'e'&amp;#10;        feedback_correct = 'e'&amp;#10;    elif (trialType == 2) or (trialType == 3):&amp;#10;        required_allowed = 'e'&amp;#10;        required_correct = 'e'&amp;#10;        feedback_allowed = 'i'&amp;#10;        feedback_correct = 'i'&amp;#10;elif moving_response_options == True:&amp;#10;    rand_positions = randint(1, 3)&amp;#10;    response_option_onset = 0.4  # response options appear with stimuli&amp;#10;    if rand_positions == 1:&amp;#10;        response_option_left = response_option_B&amp;#10;        response_option_right = response_option_A&amp;#10;        if (trialType == 1) or (trialType == 4):&amp;#10;            required_allowed = 'i'&amp;#10;            required_correct = 'i'&amp;#10;            feedback_allowed = 'e'&amp;#10;            feedback_correct = 'e'&amp;#10;        elif (trialType == 2) or (trialType == 3):&amp;#10;            required_allowed = 'e'&amp;#10;            required_correct = 'e'&amp;#10;            feedback_allowed = 'i'&amp;#10;            feedback_correct = 'i'&amp;#10;    elif rand_positions == 2:&amp;#10;        response_option_left = response_option_A&amp;#10;        response_option_right = response_option_B&amp;#10;        if (trialType == 1) or (trialType == 4):&amp;#10;            required_allowed = 'e'&amp;#10;            required_correct = 'e'&amp;#10;            feedback_allowed = 'i'&amp;#10;            feedback_correct = 'i'&amp;#10;        elif (trialType == 2) or (trialType == 3):&amp;#10;            required_allowed = 'i'&amp;#10;            required_correct = 'i'&amp;#10;            feedback_allowed = 'e'&amp;#10;            feedback_correct = 'e'" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="# save exemplars to experiment handler so they're written to the csv file&amp;#10;thisExp.addData('stimulus1', stimulus1)&amp;#10;thisExp.addData('stimulus2', stimulus2)&amp;#10;thisExp.addData('img_stimulus1', img_stimulus1)&amp;#10;thisExp.addData('img_stimulus2', img_stimulus2)&amp;#10;thisExp.addData('response_option_left', response_option_left)&amp;#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="# Accuracy feedback message&amp;#10;if len(feedback_response_A.keys)&lt;1:&amp;#10;    accuracyFeedback=&quot;&quot;&amp;#10;else:&amp;#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="flipVert" updates="constant" val="False" valType="bool"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="image_stimulus1_box_A" valType="code"/>\u000a        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="mask" updates="constant" val="None" valType="str"/>\u000a        <Param name="pos" updates="set every repeat" val="image_stimulus1_location" valType="code"/>\u000a        <Param name="interpolate" updates="constant" val="linear" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="texture resolution" updates="constant" val="128" valType="code"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="image" updates="set every repeat" val="$img_stimulus1" valType="str"/>\u000a        <Param name="size" updates="constant" val="[0.5, 0.5]" valType="code"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="flipVert" updates="constant" val="False" valType="bool"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="image_stimulus2_box_A" valType="code"/>\u000a        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="mask" updates="constant" val="None" valType="str"/>\u000a        <Param name="pos" updates="set every repeat" val="image_stimulus2_location" valType="code"/>\u000a        <Param name="interpolate" updates="constant" val="linear" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="texture resolution" updates="constant" val="128" valType="code"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="image" updates="set every repeat" val="$img_stimulus2" valType="str"/>\u000a        <Param name="size" updates="constant" val="[0.5, 0.5]" valType="code"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="stimulus1_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$stimulus1" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="stimulus1_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="stimulus2_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$stimulus2" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="stimulus2_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" updates="constant" val="$required_correct" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>\u000a        <Param name="name" updates="None" val="required_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="set every repeat" val="required_allowed" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="store" updates="constant" val="first key" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" updates="constant" val="$feedback_correct" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>\u000a        <Param name="name" updates="None" val="feedback_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="set every repeat" val="feedback_allowed" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="store" updates="constant" val="first key" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="left_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$response_option_left" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="response_option_left_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="0" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="$response_option_onset" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="right_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$response_option_right" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="response_option_right_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="0" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="$response_option_onset" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="accuracy_feedback_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="" valType="code"/>\u000a        <Param name="color" updates="constant" val="red" valType="str"/>\u000a        <Param name="text" updates="set every frame" val="$accuracyFeedback" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="set every repeat" val="accuracy_feedback_location" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.2" valType="code"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" updates="constant" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&amp;#10;complete_test_blocks = 0" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="end_practice_code" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Assess if acc and latency mastery criteria were met&amp;#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&amp;#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx&amp;#10;    practice_blocks.finished = True" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" updates="constant" val="# msg variable just needs some value at start&amp;#10;accuracyFeedback=''&amp;#10;" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="preblock_A_code" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# Generate list of stimuli for the block&amp;#10;stim1_catA_stimuli_many = generate_trials('labelA_stimuli', 2, True)  # function and variable determined at begin exp.&amp;#10;stim1_catB_stimuli_many = generate_trials('labelB_stimuli', 2, True)&amp;#10;stim2_catA_stimuli_many = generate_trials('targetA_stimuli', 2, True)&amp;#10;stim2_catB_stimuli_many = generate_trials('targetB_stimuli', 2, True)&amp;#10;img_stim1_catA_stimuli_many = generate_trials('labelA_image_stimuli', 2, True)&amp;#10;img_stim1_catB_stimuli_many = generate_trials('labelB_image_stimuli', 2, True)&amp;#10;img_stim2_catA_stimuli_many = generate_trials('targetA_image_stimuli', 2, True)&amp;#10;img_stim2_catB_stimuli_many = generate_trials('targetB_image_stimuli', 2, True)&amp;#10;" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="constant" val="rule_box_A" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>\u000a        <Param name="color" updates="constant" val="orange" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$rule_A" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" updates="constant" val="thisTrial.corrAns" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="preblock_response_A" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="preblock_B_code" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# Option to simulates using ResponseEmulator:&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# Generate list of stimuli for the block&amp;#10;stim1_catA_stimuli_many = generate_trials('labelA_stimuli', 2, True)  # function and variable determined at begin exp.&amp;#10;stim1_catB_stimuli_many = generate_trials('labelB_stimuli', 2, True)&amp;#10;stim2_catA_stimuli_many = generate_trials('targetA_stimuli', 2, True)&amp;#10;stim2_catB_stimuli_many = generate_trials('targetB_stimuli', 2, True)&amp;#10;img_stim1_catA_stimuli_many = generate_trials('labelA_image_stimuli', 2, True)&amp;#10;img_stim1_catB_stimuli_many = generate_trials('labelB_image_stimuli', 2, True)&amp;#10;img_stim2_catA_stimuli_many = generate_trials('targetA_image_stimuli', 2, True)&amp;#10;img_stim2_catB_stimuli_many = generate_trials('targetB_image_stimuli', 2, True)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="constant" val="rule_box_B" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>\u000a        <Param name="color" updates="constant" val="cyan" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$rule_B" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" updates="constant" val="thisTrial.corrAns" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="preblock_response_B" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" updates="constant" val="# Dependencies&amp;#10;&amp;#10;from psychopy.hardware.emulator import ResponseEmulator  #for response emulator&amp;#10;import itertools  # for flattening lists of lists into lists&amp;#10;import random  # for shuffling lists&amp;#10;&amp;#10;# Functions&amp;#10;&amp;#10;# Convert string to boolean.&amp;#10;# Take any likely input from the task.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&amp;#10;def string_to_booleanl(v):&amp;#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, 1)&amp;#10;&amp;#10;# Trial generation function&amp;#10;def generate_trials(trial_type_column, multiplier, shuffle_list):&amp;#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &amp;#10;    a = dict()  # declare a dict to be populated&amp;#10;    for i in range(len(exemplars)):&amp;#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&amp;#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&amp;#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&amp;#10;    if shuffle_list == True:&amp;#10;        random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&amp;#10;    return a&amp;#10;&amp;#10;&amp;#10;# Determine variables based on dialogue box&amp;#10;&amp;#10;# auto response monkey&amp;#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&amp;#10;    Monkey = True&amp;#10;else:&amp;#10;    Monkey = False&amp;#10;&amp;#10;# starting block&amp;#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&amp;#10;    starting_block = 'a'&amp;#10;    Afirst_nReps = 1&amp;#10;    Asecond_nReps = 0&amp;#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&amp;#10;    starting_block = 'b'&amp;#10;    Afirst_nReps = 0&amp;#10;    Asecond_nReps = 1&amp;#10;" valType="extendedCode"/>\u000a        <Param name="name" updates="None" val="inst_code" valType="code"/>\u000a        <Param name="Begin Routine" updates="constant" val="# ResponseEmulator&amp;#10;if Monkey:&amp;#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&amp;#10;    responder = ResponseEmulator(simulated_responses)&amp;#10;    responder.start()&amp;#10;&amp;#10;# Create sufficiently long lists of stimuli&amp;#10;&quot;&quot;&quot;&amp;#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &amp;#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &amp;#10;as well as the categories. &amp;#10;&amp;#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &amp;#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &amp;#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &amp;#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&amp;#10;rows, and then populates the dict vertically from the rows. &amp;#10;&quot;&quot;&quot;&amp;#10;# Import stimuli exemplars&amp;#10;exemplars = data.importConditions(stimulus_file)  # Import stimuli exemplars. stimulus_file is defined in task.xlsx&amp;#10;&amp;#10;# Determine nReps of trials loop based on number of exemplars&amp;#10;reptitions = len(exemplars)&amp;#10;&amp;#10;&amp;#10;# Generate a first, unshuffled list of the stimuli exemplars for saving to output file&amp;#10;&amp;#10;# 1. generate: no shuffling, multiplier = 1.&amp;#10;labelA_stimuli_for_output = generate_trials('labelA_stimuli', 1, False)  # function and variable determined at begin exp.&amp;#10;labelB_stimuli_for_output = generate_trials('labelB_stimuli', 1, False)&amp;#10;targetA_stimuli_for_output = generate_trials('targetA_stimuli', 1, False)&amp;#10;targetB_stimuli_for_output = generate_trials('targetB_stimuli', 1, False)&amp;#10;labelA_image_stimuli_for_output = generate_trials('labelA_image_stimuli', 1, False)&amp;#10;labelB_image_stimuli_for_output = generate_trials('labelB_image_stimuli', 1, False)&amp;#10;targetA_image_stimuli_for_output = generate_trials('targetA_image_stimuli', 1, False)&amp;#10;targetB_image_stimuli_for_output = generate_trials('targetB_image_stimuli', 1, False)&amp;#10;&amp;#10;# 2. save these lists to the trial handler to be written to csv&amp;#10;thisExp.addData('labelA_stimuli_for_output', labelA_stimuli_for_output)&amp;#10;thisExp.addData('labelB_stimuli_for_output', labelB_stimuli_for_output)&amp;#10;thisExp.addData('targetA_stimuli_for_output', targetA_stimuli_for_output)&amp;#10;thisExp.addData('targetB_stimuli_for_output', targetB_stimuli_for_output)&amp;#10;thisExp.addData('labelA_image_stimuli_for_output', labelA_image_stimuli_for_output)&amp;#10;thisExp.addData('labelB_image_stimuli_for_output', labelB_image_stimuli_for_output)&amp;#10;thisExp.addData('targetA_image_stimuli_for_output', targetA_image_stimuli_for_output)&amp;#10;thisExp.addData('targetB_image_stimuli_for_output', targetB_image_stimuli_for_output)" valType="extendedCode"/>\u000a        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>\u000a        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>\u000a      </CodeComponent>\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" updates="constant" val="1" valType="code"/>\u000a        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>\u000a        <Param name="name" updates="None" val="intro_box" valType="code"/>\u000a        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>\u000a        <Param name="color" updates="constant" val="white" valType="str"/>\u000a        <Param name="text" updates="set every repeat" val="$intro_message" valType="str"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>\u000a        <Param name="flip" updates="constant" val="" valType="str"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="units" updates="None" val="from exp settings" valType="str"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="ori" updates="constant" val="0" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="0.4" valType="code"/>\u000a        <Param name="font" updates="constant" val="Arial" valType="str"/>\u000a        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" updates="constant" val="" valType="str"/>\u000a        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>\u000a        <Param name="name" updates="None" val="intro_resp" valType="code"/>\u000a        <Param name="stopVal" updates="constant" val="" valType="code"/>\u000a        <Param name="durationEstim" updates="None" val="" valType="code"/>\u000a        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startEstim" updates="None" val="" valType="code"/>\u000a        <Param name="discard previous" updates="constant" val="True" valType="bool"/>\u000a        <Param name="startType" updates="None" val="time (s)" valType="str"/>\u000a        <Param name="allowedKeys" updates="constant" val="'e', 'i'" valType="code"/>\u000a        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>\u000a        <Param name="startVal" updates="None" val="1" valType="code"/>\u000a        <Param name="store" updates="constant" val="nothing" valType="str"/>\u000a        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" updates="None" val="task.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="task" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="1" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'response_option_left_location': [-0.3, -0.6], u'accuracyCriterion': 0, u'response_option_right_location': [0.3, -0.6], u'end_message': u'End of task', u'image_stimulus1_location': [0, 0.3], u'speed': u'Speed:', u'rule_A': u&quot;Respond AS IF: \u005cn    flowers are positive\u005cn    insects are negative\u005cn\u005cnGo as quickly as you can while being accurate\u005cn\u005cnPress 'e' or 'i' to continue&quot;, u'rule_B': u&quot;Respond AS IF: \u005cn    insects are positive \u005cn    flowers are negative\u005cn\u005cnGo as quickly as you can while being accurate\u005cn\u005cnPress 'e' or 'i' to continue&quot;, u'press_message': u&quot;Press 'e' or 'i' to continue&quot;, u'intro_message': u&quot;This task will present you with pairs of words. \u005cn\u005cnYou will be given rules on how to respond to them. \u005cn\u005cnGo as quickly as you can while being accurate.\u005cn\u005cnPlace your fingers on the 'e' and 'i' keys. \u005cn\u005cnPress either one to continue.&quot;, u'response_option_B': u'Different', u'response_option_A': u'Similar', u'latencyCriterion': 2, u'stimulus2_location': [0, -0.2], u'accuracy': u'Accuracy:', u'seconds': u'seconds', u'percentCorrect': u'percent correct', u'stimulus_file': u'flower_insects_stimuli.xlsx', u'accuracy_feedback_location': [0, -0.7], u'moving_response_options': u'False', u'image_stimulus2_location': [0, -0.3], u'IRAP_name': u'flowers-insects demo IRAP', u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'stimulus1_location': [0, 0.2], u'n_pairs_test_blocks': 1, u'max_pairs_practice_blocks': 4}, {u'response_option_left_location': [-0.3, -0.6], u'accuracyCriterion': 0, u'response_option_right_location': [0.3, -0.6], u'end_message': u'End of task', u'image_stimulus1_location': [0, 0.3], u'speed': u'Speed:', u'rule_A': u&quot;Respond AS IF: \u005cn    I am positive\u005cn    Others are negative\u005cn\u005cnGo as quickly as you can while being accurate\u005cn\u005cnPress 'e' or 'i' to continue&quot;, u'rule_B': u&quot;Respond AS IF: \u005cn    I am negative \u005cn    Others are positive\u005cn\u005cnGo as quickly as you can while being accurate\u005cn\u005cnPress 'e' or 'i' to continue&quot;, u'press_message': u&quot;Press 'e' or 'i' to continue&quot;, u'intro_message': u&quot;This task will present you with pairs of words. \u005cn\u005cnYou will be given rules on how to respond to them. \u005cn\u005cnGo as quickly as you can while being accurate.\u005cn\u005cnPlace your fingers on the 'e' and 'i' keys. \u005cn\u005cnPress either one to continue.&quot;, u'response_option_B': u'Different', u'response_option_A': u'Similar', u'latencyCriterion': 2, u'stimulus2_location': [0, -0.2], u'accuracy': u'Accuracy:', u'seconds': u'seconds', u'percentCorrect': u'percent correct', u'stimulus_file': u'self_others_stimuli.xlsx', u'accuracy_feedback_location': [0, -0.7], u'moving_response_options': u'False', u'image_stimulus2_location': [0, -0.3], u'IRAP_name': u'flowers-insects demo IRAP', u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'stimulus1_location': [0, 0.2], u'n_pairs_test_blocks': 1, u'max_pairs_practice_blocks': 4}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_blocks" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="max_pairs_practice_blocks" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_Afirst" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="Afirst_nReps" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_trials_Afirst" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_trials_B" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_Asecond" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="Asecond_nReps" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="practice_trials_Asecond" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="test_blocks" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="complete_test_blocks" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="Afirst" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="Afirst_nReps" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="trials_Afirst" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="trials_B" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" updates="None" val="" valType="str"/>\u000a      <Param name="name" updates="None" val="Asecond" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="False" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="sequential" valType="str"/>\u000a      <Param name="nReps" updates="None" val="Asecond_nReps" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="None" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" updates="None" val="block_layout.xlsx" valType="str"/>\u000a      <Param name="name" updates="None" val="trials_Asecond" valType="code"/>\u000a      <Param name="isTrials" updates="None" val="True" valType="bool"/>\u000a      <Param name="random seed" updates="None" val="" valType="code"/>\u000a      <Param name="loopType" updates="None" val="random" valType="str"/>\u000a      <Param name="nReps" updates="None" val="reptitions" valType="code"/>\u000a      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>\u000a      <Param name="conditions" updates="None" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str"/>\u000a      <Param name="Selected rows" updates="None" val="" valType="str"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p133
sg40
Nsg89
I284460304
sg11
S'practice_blocks'
p134
sg6
g7
sg91
I0
sg15
I01
sg16
g17
sg92
g1
(g93
g42
(dp135
g95
g96
(g97
g98
g99
S'b'
tRp136
(I1
(I1
I4
tg101
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
Ntbsg102
g96
(g97
g98
g99
S'b'
tRp137
(I1
(I1
I4
tg101
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01'
NtbstRp138
(dp139
g106
(dp140
g95
I01
sg102
I01
ssg108
g131
sg109
(lp141
g95
ag102
asg111
(lp142
I1
aI4
asbsg113
g114
sg115
g116
(g98
(I0
tS'b'
tRp143
(I1
(I1
I4
tg118
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsg119
I00
sg120
I4
sg121
I3
sg122
(lp144
Nasg124
Nsg125
g25
(g118
S'\x00\x00\x00\x00'
tRp145
sg127
I0
sg128
I0
sg129
I4
sg130
I01
sbasS'saveWideText'
p146
I01
sS'thisEntry'
p147
(dp148
sS'version'
p149
S''
sS'_paramNamesSoFar'
p150
(lp151
sS'entries'
p152
(lp153
sS'loops'
p154
(lp155
g36
ag131
asS'savePickle'
p156
I00
sb.